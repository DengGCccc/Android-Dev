1. 基本使用

1.1 打开工程，依次点击：File -> ProjectStructure -> SDK Location, 配置NDK路径，然后Make project后，
	在local.properties中一般会有下面代码(没有则手动添加)：
	ndk.dir=/Users/deng/Desktop/android-develop/tools/android-ndk-r10e
1.2 利用javah生成对应的 .h头文件。
	打开view ->ToolsWindows->Terminal，
	cd app/src/main/java
	javah -d ../jni com.dgc.testjni.MainActivity
	此时，生成app/src/main/java/jni/----.h
1.3 在jni目录下建立C源文件, testJni.c, 参考代码如下
#include <jni.h>

#ifndef _Included_com_dgc_testndk_MainActivity
#define _Included_com_dgc_testndk_MainActivity
#ifdef __cplusplus
extern "C" {
#endif
... ...
JNIEXPORT jstring JNICALL Java_com_dgc_testndk_MainActivity_getStringFromNative (JNIEnv *env, jobject jObj) {
    return (*env)->NewStringUTF(env,"Hello From JNI!");
}

#ifdef __cplusplus
}
#endif
#endif
1.4 在app目录下得builde.gradle, 在defaultConfig标签下添加如下代码，moduleName即为java代码中调用的库名, ldLibs和abiFilters可不填：
    defaultConfig {
        applicationId "com.dgc.testndk"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        ndk {
            moduleName "MyJni"
            ldLibs "log"
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }
1.5 编译完成.

另：
出现如下问题：

1.Error:(50, 0) Error: NDK integration is deprecated in the current plugin. Consider trying the new experimental plugin. For details, see http://tools.android.com/tech-docs/new-build-system/gradle-experimental. Set "android.useDeprecatedNdk=true" in gradle.properties to continue using the current NDK integration.

解决办法：
在gradle.properties 文件里面添加 android.useDeprecatedNdk=true 后重新编译即可

2.编译后jin不生效，打开Run -> Edit Configuration -> Android Native时出现build type isn't jni debuggable错误。

解决办法：
在app目录下的gradle文件里修改debug配置
buildTypes {
	release {
		minifyEnabled false
		proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
	}
	
	debug {
	jniDebuggable true
	}
}
