1. AIDL 入门--新建AIDL项目
1.1 新建两个工程 CalculateService 和 CalculateClient
1.2 首先需要创建AIDL文件，定义AIDL接口，客户端和服务器端都要定义，并且要在同一包中

package com.dgc.aidl;

interface ICalculateInterface {

    double doCalculate(double a, double b);

}

1.3 编译两个工程
1.4 服务器端创建一个Service -- CalculateService

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.os.RemoteException;
import android.util.Log;

import com.dgc.aidl.ICalculateInterface;

public class CalculateService extends Service {

    private static final String TAG = "CalculateService";

    @Override
    public IBinder onBind(Intent arg0) {
        logE("onBind()");
        return mBinder;
    }

    @Override
    public void onCreate() {
        logE("onCreate()");
        super.onCreate();
    }

    @Override
    public void onStart(Intent intent, int startId) {
        logE("onStart()");
        super.onStart(intent, startId);
    }

    @Override
    public boolean onUnbind(Intent intent) {
        logE("onUnbind()");
        return super.onUnbind(intent);
    }

    @Override
    public void onDestroy() {
        logE("onDestroy()");
        super.onDestroy();
    }

    private static void logE(String str) {
        Log.e(TAG, "--------" + str + "--------");
    }

    private final ICalculateInterface.Stub mBinder = new ICalculateInterface.Stub() {

        @Override
        public double doCalculate(double a, double b) throws RemoteException {
            Log.e("Calculate", "远程计算中");
            return a + b;
        }
    };

1.5 服务端配置Service

<service android:name=".CalculateService">
    <intent-filter>
        <action android:name="com.dgc.aidl.CalculateService" />
    </intent-filter>
</service>

1.6 客户端进行绑定Service 并进行调用

import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.os.IBinder;
import android.os.RemoteException;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;

import com.dgc.aidl.ICalculateInterface;

public class MainActivity extends Activity {
    private static final String TAG = "CalculateClient";

    private ICalculateInterface mService;

    private ServiceConnection mServiceConnection = new ServiceConnection() {

        @Override
        public void onServiceDisconnected(ComponentName name) {
            logE("disconnect service");
            mService = null;
        }

        @Override
        public void onServiceConnected(ComponentName name, IBinder service) {
            logE("connect service");
            mService = ICalculateInterface.Stub.asInterface(service);
        }
    };

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        Button btn = new Button(this);

        setContentView(btn);

        Intent intent = new Intent("com.dgc.aidl.CalculateService");
        bindService(intent, mServiceConnection, Context.BIND_AUTO_CREATE);

        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                logE("开始远程运算");
                try {
                    double num1 = 2.0d;
                    double num2 = 5.0d;
                    String answer = "计算结果：" + mService.doCalculate(num1, num2);

                    System.out.println(answer);
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
        });
    }

    private void logE(String str) {
        Log.e(TAG, "--------" + str + "--------");
    }
}

1.7 编译两个工程，Done...


另：
1. 如果报以下错误，
IllegalArgumentException: Service Intent must be explicit

经过查找相关资料，发现是因为Android5.0开始service的intent一定要显性声明。
隐式调用时（比如用Intent intent = new Intent("com.dgc.aidl.CalculateService");）, Intent 需要用以下函数转为显式：
    public static Intent createExplicitFromImplicitIntent(Context context, Intent implicitIntent) {
        // Retrieve all services that can match the given intent
        PackageManager pm = context.getPackageManager();
        List<ResolveInfo> resolveInfo = pm.queryIntentServices(implicitIntent, 0);

        // Make sure only one match was found
        if (resolveInfo == null || resolveInfo.size() != 1) {
            return null;
        }

        // Get component info and create ComponentName
        ResolveInfo serviceInfo = resolveInfo.get(0);
        String packageName = serviceInfo.serviceInfo.packageName;
        String className = serviceInfo.serviceInfo.name;
        ComponentName component = new ComponentName(packageName, className);

        // Create a new intent. Use the old one for extras and such reuse
        Intent explicitIntent = new Intent(implicitIntent);

        // Set the component to be explicit
        explicitIntent.setComponent(component);

        return explicitIntent;
    }
